
print: "pinecone v"+VERSION.x.String+"."+VERSION.y.String+"."+VERSION.z.String+" unit tests running...\n"

runTest: "vars", "5.88\n"
runTest: "operators", "5\n4.75\n6\n1\n4\n2\n2.75\n2\nfls\ntru\ntru\ntru\nfls\ntru\nfls\n"
runTest: "constants", "21\n"
runTest: "conditionals", "3\n5\n"
runTest: "loops", "4\n3\n2\n1\n\n0\n1\n2\n3\n4\n5\n"
runTest: "strings", "hello\na\nbxyz\nwe\n6\n4\n"
runTest: "funcs", "1\n6\n10\n5\n3\n2\n1\n0\n"

print: "\ntests done"

runTest :: {name: String, target: String}:
(
	out: runCmd: "./pinecone examples/tests/"+in.name+".pncn"
	
	out = in.target ? (
		print: ".\t"+in.name+" passed"
	)|(
		print: "X\t"+in.name+" failed"
		print: divideLine
		print: "output:"
		print: out
		print: "instead of:"
		print: in.target+divideLine
	)
)

divideLine :: "_____________________________________________\n"
